#!/bin/bash
# vim: ft=sh
# General system aliases
alias vim="nvim"
alias vimdiff="nvim -d"
alias sudo="sudo "
alias chown="chown -h"
alias which="which -a"
alias ls='ls -hX --group-directories-first --time-style=+"%d/%m/%Y %H:%M:%S" --color=auto -F --quoting-style=literal'
alias ll='ls -l'
alias la='ls -Al'
alias tailf='tail -F'
alias cal='cal -y'
alias cp="cp -i -r"
alias mv="mv -i"
alias rm="rm -i --one-file-system"
alias df='df -h'
alias ps='ps --ppid 2 -N --forest -o user:15,ppid,pid,cmd'
alias psw='ps -ww'
alias pstree='sudo \pstree -aStpnT'
alias pstreet='sudo \pstree -aStpnt'
alias grep="grep --color=auto"
alias less="less -R"
alias free='free -mw'
alias dfc='dfc -d -t -tmpfs,dev -m'
alias telnet="telnet --escape='^E'"
alias telnet-ssl="telnet-ssl -z ssl"
alias du='du -shc'
alias rsync='rsync -vPhr'
alias sortdu='du -h | sort -h'
alias nmcli='nmcli -a'
alias diff='diff -u'
which colordiff &>/dev/null && alias diff='colordiff -u'
alias fd="fd -H -E .git"
alias find="fd -H -I"
alias rg="rg -SL --hidden -g '!\.git' -g '!package-lock.json' -g '!yarn.lock'"
alias rrg="rg --no-ignore"
alias vmstat="vmstat -S M"
#alias w="w -i"
alias last="last -w"
alias pinky="pinky -w"
alias tee="tee -a"
alias nmap="nmap -v"
alias xz="xz -T 0"
alias zstd="zstdmt"
alias lsblk="lsblk -o name,label,size,fstype,fssize,fsavail,mountpoint,uuid"
alias killall="killall -v -I"
alias pgrep="pgrep -f"
alias ..="cd -- .."
alias ...="cd -- ../.."
alias ....="cd -- ../../.."
alias .....="cd -- ../../../.."
alias ......="cd -- ../../../../.."
alias .......="cd -- ../../../../../.."
alias ........="cd -- ../../../../../../.."
alias .........="cd -- ../../../../../../../.."
cd() {
	builtin cd "$@" && ll
}
tobg() {
	("$@" &>/dev/null &)
}
alias open="tobg xdg-open"
alias o="(thunar &>/dev/null &)"
u() {
	tobg alacritty --working-directory .
}
alias g="ping 1.1"
alias i="curl ipv4.icanhazip.com"
alias i6="curl ipv6.icanhazip.com"
alias sstp="sudo ss -lnrp -f inet"
alias sstp6="sudo ss -lnrp -f inet"
alias tm="tmux -CC attach -d || tmux -CC new"
alias ta="tmux attach -d || tmux new"
alias r='ranger --choosedir=/tmp/.rangerdir; cd $(cat /tmp/.rangerdir)'
alias m="vim notes.md"
alias ssmem='sudo smem -t -a -k -s swap'
alias smem='sudo smem -t -a -k -s rss'
alias timer='echo timer started, use ctrl-c to stop; time cat'
alias dmesg='sudo dmesg -T'
show-iptables() {
	printf 'SECURITY ==============================================================\n'
	sudo iptables-legacy -nvL -t security
	printf '\nRAW ===================================================================\n'
	sudo iptables-legacy -nvL -t raw
	printf '\nMANGLE ================================================================\n'
	sudo iptables-legacy -nvL -t mangle
	printf '\nNAT ===================================================================\n'
	sudo iptables-legacy -nvL -t nat
	printf '\nFILTER ================================================================\n'
	sudo iptables-legacy -nvL -t filter
}
alias zp='zpool status; zpool list'
alias z='zfs list -t all -o name,creation,used,referenced,encryption,readonly,encryption,dedup,mountpoint'
alias sway='sway &>> ~/.local/log/sway.log'
alias screen-off="swaymsg -s /run/user/1000/sway-ipc.1000.*.sock 'output * dpms off'"
alias screen-on="swaymsg -s /run/user/1000/sway-ipc.1000.*.sock 'output * dpms on'"
alias colorpick='grim -g "$(slurp -p)" -t ppm - | convert - -format "%[pixel:p{0,0}]" txt:-'
alias ex='unp'
alias quickemu='quickemu --display spice'

# Dev
alias make='make -j$(nproc)'
alias memcheck="valgrind --tool=memcheck --leak-check=full --show-leak-kinds=all --track-origins=yes"
alias py="python"
alias rlwrap="rlwrap -aplaceholder" # https://github.com/technomancy/grenchman/issues/36
#alias node="NODE_NO_READLINE=1 rlwrap node"
alias mvn="mvn -ntp -e"
alias mit-scheme="rlwrap mit-scheme"
alias sbcl="rlwrap sbcl"
alias yaegi="rlwrap yaegi"
alias gop='cd $GOPATH'
#alias gradle="gradle --parallel -t --watch-fs"
alias gradle="gradle --parallel"
alias be='bundle exec'
alias gem_clean='gem uninstall -aIx'
alias rt="rg TODO"
alias wireshark_ssl="(wireshark -o ssl.keylog_file:ssl_keylog -o ssl.debug_file:debug.txt) &>/dev/null &; export SSLKEYLOGFILE=ssl_keylog"
# Docker
alias dc="docker ps -a --format='table {{.ID}}\t{{.Names}}\t{{.Image}}\t{{.RunningFor}}\t{{.Status}}\t{{.Ports}}'"
alias dsc="docker stop -t 0 \$(docker ps -aq) &>/dev/null"
alias dcc="docker rm -f \$(docker ps -aq) &>/dev/null"
alias di="docker images"
drmia() {
	docker images -a | grep "$1" | tr -s ' ' | cut -d ' ' -f 2 | xargs -I {} docker rmi "$1":{}
}
alias dv='docker ps -a --format "table {{.Names}}\t{{.Mounts}}" --no-trunc'
alias dr="docker restart -t 0"
alias dl="docker logs -f --since 3h"
docker_show_layers() {
	docker history "$1" --format '{{.CreatedBy}}' --no-trunc
}
alias dspace="docker system df -v"
alias docker-tui="lazydocker"
alias dah='docker inspect --format="{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}} {{.Name}}" $(docker ps -q) | sed "s# /# #g" | sudo tee -a /etc/hosts'
alias drh='docker inspect --format="{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}} {{.Name}}" $(docker ps -q) | sed "s# /# #g" | sudo xargs -I{} sed -i "/{}/d" /etc/hosts'
# Or use `x11docker` command
alias x11-docker='docker run -u lyonn -v /tmp/.X11-unix:/tmp/.X11-unix -e DISPLAY=$DISPLAY -v $HOME/.Xauthority:/home/lyonn/.Xauthority -it cenas:1'
# Kubernetes
type kubectl &>/dev/null \
	&& alias k=kubectl \
    `#bash should have this var, zsh not really` \
	&& [[ -z $HISTFILE ]] \
	&& source <(kubectl completion zsh | sed 's/kubectl/k/g')
kube-getall() {
	kubectl api-resources --verbs=list -o name | grep -v events \
		| parallel kubectl get -A --ignore-not-found --show-kind
}
kube-getall-ns() {
  echo "Namespace $1 ---------------------------------------------------------"
  for i in $(kubectl api-resources --verbs=list --namespaced -o name | grep -v "events"); do
    echo "Resource: $i"
    kubectl -n "$1" get --ignore-not-found "$i"
  done
}
# Git
alias gs="git status"
alias gb="git branch -vvaa"
alias gd="git diff --no-color"
alias gdc="git diff --no-color --cached"
alias gdm="gd master..HEAD"
alias gr="git remote -vvv"
alias grc="git rebase --continue"
alias grm="git rebase -i master || git rebase -i main"
alias ga="git add"
alias gitk="gitk --all &"
alias gg="git gui &"
alias gl="PAGER= git lg"
alias glm="gl master..HEAD"
alias gss="git submodule update --init"
alias git-clean-tags="git tag -l | xargs git tag -d ; git fetch --tags"
alias git-mtime="for f in \$(git ls-files); do touch -d \$(git log -1 --format='%aI' \"\$f\") \"\$f\" ; done"
rm_worktree() {
	for b in "$@"; do rm -rf ../"$b"; done
	git worktree prune
	git branch -D "$@"
}

# Connections
alias p="ssh pinecone"
alias uh="fusermount -u ~/p"
alias h="uh; sshfs -o ServerAliveInterval=10 pinecone: ~/p; cd ~/p/Documents"
alias c="[[ -d ~/p ]] && h; cd ~/p/Documents/computer || cd ~/Documents/computer"
# Power-related
alias lock="physlock"
alias slock="systemctl suspend && physlock -d"
alias susp="systemctl suspend"
alias hib="systemctl hibernate"
alias hyb="systemctl hybrid-sleep"
alias inhib_susp="sudo systemd-inhibit --what=sleep:handle-lid-switch:handle-suspend-key --who=\$USER --why='Suspend deliberately inhibited' sleep 99999d"

# etc
alias mupdf="mupdf -r 144"
alias feh="feh --keep-zoom-vp --auto-zoom --scale-down --info 'echo %f && echo [%u/%l] %wx%h %z'"
alias inxi="inxi -F"
alias units="units --verbose"
alias nload="nload -u M"
alias pandoc="pandoc -s"
alias openssl-smtp-starttls="openssl s_client -quiet -starttls smtp -connect" # https://serverfault.com/a/336657
alias count_threads='count() { printf %s\\n "$#" }; count /proc/[0-9]*/task/[0-9]*'
alias clean_vim="git clean -fdx \$HOME/.vim/{undo,swap,backup}; rm -rf \$HOME/.viminfo"
alias pacro="yay -Yc"
alias pacexplicit="comm -23 <(pacman -Qqe | sort) <(pacman -Qqg base base-devel | sort)"
alias hddpoff="udisksctl power-off -b"
alias yt-dlp="yt-dlp -f 'bestvideo[ext=mp4]+bestaudio[ext=m4a]/mp4' --prefer-ffmpeg"
alias ytmp3="yt-dlp -x --audio-format mp3 --audio-quality 320 --prefer-ffmpeg"
_bluetooth_connect() {
	sudo rfkill unblock bluetooth
	local action='connect'
	if [[ "$2" == 'off' ]]; then action='disconnect'; fi
	echo -e "$action $1\n" | bluetoothctl
}
airpods() {
	_bluetooth_connect C4:0B:31:F0:86:87 $1
}
magic_kb() {
	_bluetooth_connect 64:0B:D7:1E:9B:DD $1
}
ds5() {
	_bluetooth_connect 4C:B9:9B:74:9D:6F $1
}
tozo() {
	_bluetooth_connect 31:10:08:17:0F:1A $1
}
edifier() {
	_bluetooth_connect 60:F4:3A:BC:39:9F $1
}

# Fun stuff
alias randomfact='wget randomfunfacts.com -qO- 2>/dev/null | grep \<strong\> | sed "s;^.*<i>\(.*\)</i>.*$;\1;"'
alias cmatrix="cmatrix -u 7"
alias matrix='echo -e "\e[32m"; while :; do for i in {1..16}; do r="$(($RANDOM % 2))"; if [[ $(($RANDOM % 5)) == 1 ]]; then if [[ $(($RANDOM % 4)) == 1 ]]; then v+="\e[1m $r	"; else v+="\e[2m $r   "; fi; else v+="		"; fi; done; echo -e "$v"; v=""; done'
alias matrix2='echo -e "\e[31m"; while $t; do for i in `seq 1 30`;do r="$[($RANDOM % 2)]";h="$[($RANDOM % 4)]";if [ $h -eq 1 ]; then v="\e[1m $r";else v="\e[2m $r";fi;v2="$v2 $v";done;echo -e $v2;v2="";done;'
alias matrix3='COL=$(( $(tput cols) / 2 )); clear; tput setaf 2; while :; do tput cup $((RANDOM%COL)) $((RANDOM%COL)); printf "%$((RANDOM%COL))s" $((RANDOM%2)); done'
alias matrix4='echo -ne "\e[32m" ; while true ; do echo -ne "\e[$(($RANDOM % 2 + 1))m" ; tr -c "[:print:]" " " < /dev/urandom | dd count=1 bs=50 2> /dev/null ; done'
alias matrix5='tr -c "[:digit:]" " " < /dev/urandom | dd cbs=$COLUMNS conv=lcase,unblock &>/dev/null | GREP_COLOR="1;32" grep --color "[^ ]"'
alias colorrainbow='seq 0 255 | while read i; do printf "${i-1}: \x1b[48;5;${i}m\n"; sleep .01; done'
minor() {
	hexdump /dev/urandom -v -e '/1 "%u\n"' | awk '{ split("0,2,3,5,7,8,10,12",a,","); for (i = 0; i < 1; i+= 0.00001) printf("%08X\n", 100*sin(1382*exp((a[$1 % 8]/12)*log(2))*i)) }' | xxd -r -p | aplay -c 2 -f S32_LE -r 16000
}
major() {
	hexdump /dev/urandom -v -e '/1 "%u\n"' | awk '{ split("0,2,4,5,7,9,11,12",a,","); for (i = 0; i < 1; i+= 0.00001) printf("%08X\n", 100*sin(1382*exp((a[$1 % 8]/12)*log(2))*i)) }' | xxd -r -p | aplay -c 2 -f S32_LE -r 16000
}

